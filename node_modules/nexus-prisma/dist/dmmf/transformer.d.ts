import { DMMF } from '@prisma/client/runtime';
import { GlobalComputedInputs, GlobalMutationResolverParams, LocalComputedInputs } from '../utils';
import { DmmfDocument } from './DmmfDocument';
import { DmmfTypes } from './DmmfTypes';
export declare type TransformOptions = {
    globallyComputedInputs?: GlobalComputedInputs;
};
export declare const getTransformedDmmf: (photonClientPackagePath: string, options?: TransformOptions | undefined) => DmmfDocument;
export declare function transform(document: DMMF.Document, options?: TransformOptions): DmmfTypes.Document;
declare type AddComputedInputParams = {
    inputType: DmmfTypes.InputType;
    params: GlobalMutationResolverParams;
    dmmf: DmmfDocument;
    locallyComputedInputs: LocalComputedInputs<any>;
};
export declare function addComputedInputs({ dmmf, inputType, locallyComputedInputs, params, }: AddComputedInputParams): {
    data: {
        [x: string]: any;
    };
};
export {};
//# sourceMappingURL=transformer.d.ts.map