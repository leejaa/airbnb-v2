{"ast":null,"code":"var _jsxFileName = \"/Users/leejahun/practice/airbnb-v2/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nconst FeedQuery = gql`\n  query FeedQuery {\n    feed {\n      id\n      title\n      content\n      published\n      author {\n        id\n        name\n      }\n    }\n  }\n`;\nexport default (() => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(FeedQuery);\n\n  if (loading) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, \"Loading ...\");\n  }\n\n  if (error) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, JSON.stringify(data)));\n});","map":{"version":3,"sources":["/Users/leejahun/practice/airbnb-v2/pages/index.tsx"],"names":["React","Layout","gql","useQuery","FeedQuery","loading","error","data","message","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,MAAMC,SAAS,GAAGF,GAAI;;;;;;;;;;;;;CAAtB;AAeA,gBAAe,MAAM;AACnB,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BJ,QAAQ,CAACC,SAAD,CAAzC;;AACA,MAAIC,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AACD,MAAIC,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACE,OAAnB,CAAP;AACD;;AACD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP,CADF,CADF;AAKD,CAbD","sourcesContent":["import React from \"react\";\nimport { useRouter } from 'next/router';\nimport Layout from \"../components/Layout\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst FeedQuery = gql`\n  query FeedQuery {\n    feed {\n      id\n      title\n      content\n      published\n      author {\n        id\n        name\n      }\n    }\n  }\n`\n\nexport default () => {\n  const { loading, error, data } = useQuery(FeedQuery)\n  if (loading) {\n    return <div>Loading ...</div>\n  }\n  if (error) {\n    return <div>Error: {error.message}</div>\n  }\n  return (\n    <Layout>\n      <div>{ JSON.stringify(data) }</div>\n    </Layout>\n  );\n};"]},"metadata":{},"sourceType":"module"}