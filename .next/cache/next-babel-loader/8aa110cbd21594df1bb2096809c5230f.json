{"ast":null,"code":"var _jsxFileName = \"/Users/leejahun/practice/airbnb-v2/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App, { Container } from \"next/app\";\nimport React from \"react\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { withApollo } from \"../apollo/client\";\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      apolloClient\n    } = this.props;\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, __jsx(ApolloProvider, {\n      client: apolloClient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default withApollo(MyApp);","map":{"version":3,"sources":["/Users/leejahun/practice/airbnb-v2/pages/_app.tsx"],"names":["App","Container","React","ApolloProvider","withApollo","MyApp","constructor","props","render","Component","pageProps","apolloClient"],"mappings":";;;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,KAAN,SAAoBL,GAApB,CAA6B;AAC3BM,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAA8C,KAAKJ,KAAzD;AACA,WACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEI,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF;AAOD;;AAb0B;;AAgB7B,eAAeN,UAAU,CAACC,KAAD,CAAzB","sourcesContent":["import App, { Container } from \"next/app\";\nimport React from \"react\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { withApollo } from \"../apollo/client\";\n\nclass MyApp extends App<any> {\n  constructor(props: any) {\n    super(props);\n  }\n  render() {\n    const { Component, pageProps, apolloClient }: any = this.props;\n    return (\n      <Container>\n        <ApolloProvider client={apolloClient}>\n          <Component {...pageProps} />\n        </ApolloProvider>\n      </Container>\n    );\n  }\n}\n\nexport default withApollo(MyApp);"]},"metadata":{},"sourceType":"module"}