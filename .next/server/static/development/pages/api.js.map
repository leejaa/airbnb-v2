{"version":3,"file":"static/development/pages/api.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/api/index.ts","webpack:///external \"@prisma/client\"","webpack:///external \"graphql\"","webpack:///external \"graphql-iso-date\"","webpack:///external \"nexus\"","webpack:///external \"path\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import { makeSchema, objectType, stringArg, asNexusMethod } from 'nexus'\nimport { GraphQLDate } from 'graphql-iso-date'\nimport { PrismaClient } from '@prisma/client'\nimport { graphql } from 'graphql'\nimport path from 'path'\n\nexport const GQLDate = asNexusMethod(GraphQLDate, 'date')\n\nconst prisma = new PrismaClient()\n\nconst User = objectType({\n  name: 'User',\n  definition(t) {\n    t.string('id')\n    t.string('name')\n    t.string('email')\n    t.list.field('posts', {\n      type: 'Post',\n      resolve: parent =>\n        prisma.user\n          .findOne({\n            where: { id: Number(parent.id) },\n          })\n          .posts(),\n    })\n  },\n})\n\nconst Post = objectType({\n  name: 'Post',\n  definition(t) {\n    t.string('id')\n    t.date('createdAt')\n    t.date('updatedAt')\n    t.string('title')\n    t.string('content', {\n      nullable: true,\n    })\n    t.boolean('published')\n    t.field('author', {\n      type: 'User',\n      nullable: true,\n      resolve: parent =>\n        prisma.post\n          .findOne({\n            where: { id: Number(parent.id) },\n          })\n          .author(),\n    })\n  },\n})\n\nconst Query = objectType({\n  name: 'Query',\n  definition(t) {\n    t.field('post', {\n      type: 'Post',\n      args: {\n        postId: stringArg({ nullable: false }),\n      },\n      resolve: (_, args) => {\n        return prisma.post.findOne({\n          where: { id: Number(args.postId) },\n        })\n      },\n    })\n\n    t.list.field('feed', {\n      type: 'Post',\n      resolve: (_parent, _args, ctx) => {\n        return prisma.post.findMany({\n          where: { published: true },\n        })\n      },\n    })\n\n    t.list.field('drafts', {\n      type: 'Post',\n      resolve: (_parent, _args, ctx) => {\n        return prisma.post.findMany({\n          where: { published: false },\n        })\n      },\n    })\n\n    t.list.field('filterPosts', {\n      type: 'Post',\n      args: {\n        searchString: stringArg({ nullable: true }),\n      },\n      resolve: (_, { searchString }, ctx) => {\n        return prisma.post.findMany({\n          where: {\n            OR: [\n              { title: { contains: searchString } },\n              { content: { contains: searchString } },\n            ],\n          },\n        })\n      },\n    })\n  },\n})\n\nconst Mutation = objectType({\n  name: 'Mutation',\n  definition(t) {\n    t.field('signupUser', {\n      type: 'User',\n      args: {\n        name: stringArg(),\n        email: stringArg({ nullable: false }),\n      },\n      resolve: (_, { name, email }, ctx) => {\n        return prisma.user.create({\n          data: {\n            name,\n            email,\n          },\n        })\n      },\n    })\n\n    t.field('deletePost', {\n      type: 'Post',\n      nullable: true,\n      args: {\n        postId: stringArg(),\n      },\n      resolve: (_, { postId }, ctx) => {\n        return prisma.post.delete({\n          where: { id: Number(postId) },\n        })\n      },\n    })\n\n    t.field('createDraft', {\n      type: 'Post',\n      args: {\n        title: stringArg({ nullable: false }),\n        content: stringArg(),\n        authorEmail: stringArg(),\n      },\n      resolve: (_, { title, content, authorEmail }, ctx) => {\n        return prisma.post.create({\n          data: {\n            title,\n            content,\n            published: false,\n            author: {\n              connect: { email: authorEmail },\n            },\n          },\n        })\n      },\n    })\n\n    t.field('publish', {\n      type: 'Post',\n      nullable: true,\n      args: {\n        postId: stringArg(),\n      },\n      resolve: (_, { postId }, ctx) => {\n        return prisma.post.update({\n          where: { id: Number(postId) },\n          data: { published: true },\n        })\n      },\n    })\n  },\n})\n\nexport const schema = makeSchema({\n  types: [Query, Mutation, Post, User, GQLDate],\n  outputs: {\n    typegen: path.join(__dirname, 'nexus-typegen.ts'),\n    schema: path.join(__dirname, 'schema.graphql')\n  },\n})\n\nexport default async (req, res) => {\n  const query = req.body.query\n  const variables = req.body.variables\n  const response = await graphql(schema, query, {}, {}, variables)\n  return res.end(JSON.stringify(response))\n}","module.exports = require(\"@prisma/client\");","module.exports = require(\"graphql\");","module.exports = require(\"graphql-iso-date\");","module.exports = require(\"nexus\");","module.exports = require(\"path\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AADA;AAJA;AASA;AACA;AAhBA;AAkBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AADA;AALA;AAUA;AACA;AAtBA;AAwBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AATA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AANA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AANA;AASA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;AAdA;AAgBA;AACA;AAlDA;AAoDA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAbA;AAgBA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AAVA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAJA;AADA;AAUA;AAlBA;AAqBA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAXA;AAaA;AACA;AAnEA;AAqEA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC1LA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}